{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\nimport geojson from '../assets/all.json';\nexport default {\n  name: \"HomeMap\",\n  data: function data() {\n    return {\n      mapContainer: null,\n      mapOption: null,\n      map: null,\n      customOverlay: null,\n      infowindow: null,\n      polygons: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      var script = document.createElement(\"script\");\n\n      script.onload = function () {\n        return kakao.maps.load(_this.initMap);\n      };\n\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=9361ff07bc1d810e5c855e8be3e33c42\";\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap: function initMap() {\n      var _this2 = this;\n\n      var data = geojson.features;\n      var coordinates = [];\n      var name = '';\n      this.mapContainer = document.getElementById('map'); // 지도를 표시할 div\n\n      this.mapOption = {\n        center: new kakao.maps.LatLng(35.766826, 127.9786567),\n        // 지도의 중심좌표\n        level: 13 // 지도의 확대 레벨\n\n      };\n      this.map = new kakao.maps.Map(this.mapContainer, this.mapOption);\n      this.customOverlay = new kakao.maps.CustomOverlay({});\n      this.infowindow = new kakao.maps.InfoWindow({\n        removable: true\n      });\n      data.forEach(function (val) {\n        coordinates = val.geometry.coordinates;\n        name = val.properties.loc_nm;\n\n        if (val.geometry.type == \"MultiPolygon\") {\n          _this2.displayArea(coordinates, name, true);\n        } else {\n          _this2.displayArea(coordinates, name, false);\n        }\n      });\n      console.log(\"end-1\");\n    },\n    makePolygon: function makePolygon(coordinates) {\n      var path = [];\n      var points = [];\n      coordinates[0].forEach(function (coordinate) {\n        var point = {\n          x: coordinate[1],\n          y: coordinate[0]\n        };\n        points.push(point);\n        path.push(new kakao.maps.LatLng(coordinate[1], coordinate[0]));\n      });\n      var polygon = new kakao.maps.Polygon({\n        map: this.map,\n        //다각형을 표시할 지도 객체\n        path: path,\n        // 그려질 다각형의 좌표 배열입니다\n        strokeWeight: 2,\n        // 선의 두께입니다\n        strokeColor: '#004c80',\n        // 선의 색깔입니다\n        strokeOpacity: 0.8,\n        // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\n        strokeStyle: 'solid',\n        // 선의 스타일입니다\n        fillColor: '#fff',\n        // 채우기 색깔입니다\n        fillOpacity: 0.7 // 채우기 불투명도 입니다\n\n      });\n      return {\n        polygon: polygon,\n        points: points\n      };\n    },\n    makeMultiPolygon: function makeMultiPolygon(coordinates) {\n      var path = [];\n      var points = [];\n\n      for (var c in coordinates) {\n        var multiCoordinates = coordinates[c];\n        var path2 = [];\n\n        for (var z in multiCoordinates[0]) {\n          var point = {\n            x: multiCoordinates[0][z][1],\n            y: multiCoordinates[0][z][0]\n          };\n          points.push(point);\n          path2.push(new kakao.maps.LatLng(multiCoordinates[0][z][1], multiCoordinates[0][z][0]));\n        }\n\n        path.push(path2);\n      }\n\n      var polygon = new kakao.maps.Polygon({\n        map: this.map,\n        //다각형을 표시할 지도 객체\n        path: path,\n        // 그려질 다각형의 좌표 배열입니다\n        strokeWeight: 2,\n        // 선의 두께입니다\n        strokeColor: '#004c80',\n        // 선의 색깔입니다\n        strokeOpacity: 0.8,\n        // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\n        strokeStyle: 'solid',\n        // 선의 스타일입니다\n        fillColor: '#fff',\n        // 채우기 색깔입니다\n        fillOpacity: 0.7 // 채우기 불투명도 입니다\n\n      });\n      return {\n        polygon: polygon,\n        points: points\n      };\n    },\n    displayArea: function displayArea(coordinates, name, multi) {\n      var _this3 = this;\n\n      var points = [];\n      var polygon;\n\n      if (multi) {\n        console.log(name + 'Multi');\n        var returnValue = this.makeMultiPolygon(coordinates);\n        polygon = returnValue.polygon;\n        points.push(returnValue.points);\n      } else {\n        console.log(name + 'Single');\n\n        var _returnValue = this.makePolygon(coordinates);\n\n        polygon = _returnValue.polygon;\n        points.push(_returnValue.points);\n      }\n\n      this.polygons.push(polygon);\n      polygon.setMap(this.map); // 다각형에 mouseover 이벤트를 등록하고 이벤트가 발생하면 폴리곤의 채움색을 변경합니다\n      // 지역명을 표시하는 커스텀오버레이를 지도위에 표시합니다\n\n      kakao.maps.event.addListener(polygon, 'mouseover', function (mouseEvent) {\n        console.log(\"mouseOver\");\n        polygon.setOptions({\n          fillColor: '#09f'\n        });\n\n        _this3.customOverlay.setContent('<div class=\"area\">' + name + '</div>');\n\n        _this3.customOverlay.setPosition(mouseEvent.latLng);\n\n        _this3.customOverlay.setMap(_this3.map);\n      }); // 다각형에 mousemove 이벤트를 등록하고 이벤트가 발생하면 커스텀 오버레이의 위치를 변경합니다\n\n      kakao.maps.event.addListener(polygon, 'mousemove', function (mouseEvent) {\n        console.log(\"mouseMove\");\n\n        _this3.customOverlay.setPosition(mouseEvent.latLng);\n      }); // 다각형에 mouseout 이벤트를 등록하고 이벤트가 발생하면 폴리곤의 채움색을 원래색으로 변경합니다\n      // 커스텀 오버레이를 지도에서 제거합니다\n\n      kakao.maps.event.addListener(polygon, 'mouseout', function () {\n        console.log(\"mouseOut\");\n        polygon.setOptions({\n          fillColor: '#fff'\n        });\n\n        _this3.customOverlay.setMap(null);\n      }); // 다각형에 click 이벤트를 등록하고 이벤트가 발생하면 다각형의 이름과 면적을 인포윈도우에 표시합니다.\n\n      kakao.maps.event.addListener(polygon, 'click', function (mouseEvent) {\n        console.log(\"click\"); //만약 도클릭시 -> 지도확대되면서 시/군으로 폴리곤 구분\n\n        var level = _this3.map.getLevel() - 2;\n\n        _this3.map.setLevel(level, {\n          anchor: _this3.centroid(points[0]),\n          animate: {\n            duration: 350\n          }\n        }); //this.deletePolygon(polygon);\n\n\n        var content = '<div style=\"padding:2px;\">' + name + '</div>';\n\n        _this3.infowindow.setContent(content);\n\n        _this3.infowindow.setPosition(mouseEvent.latLng);\n\n        _this3.infowindow.setMap(_this3.map);\n      });\n    },\n    centroid: function centroid(points) {\n      var i, j, len, p1, p2, f, area, x, y;\n      area = x = y = 0;\n\n      for (i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        p1 = points[i];\n        p2 = points[j];\n        f = p1.y * p2.x - p2.y * p1.x;\n        x += (p1.x + p2.x) * f;\n        y += (p1.y + p2.y) * f;\n        area += f * 3;\n      }\n\n      console.log(x / area);\n      console.log(y / area);\n      return new kakao.maps.LatLng(x / area, y / area);\n    },\n    deletePolygon: function deletePolygon(polygon) {\n      /*\r\n      this.polygons.forEach(polygon => { \r\n          polygon.setMap(null);});\r\n          */\n      polygon.setMap(null);\n    },\n    zoomMap: function zoomMap() {}\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;AAOA;AAEA;AACAA,iBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,wBADA;AAEAC,qBAFA;AAGAC,eAHA;AAIAC,yBAJA;AAKAC,sBALA;AAMAC;AANA;AAQA,GAXA;AAYAC,SAZA,qBAYA;AAAA;;AAEA;AACA;AAEA,KAHA,MAGA;AAEA;;AAEAC;AAAA;AAAA;;AACAA,mBACA,wFADA;AAEAC;AACA;AACA,GA1BA;AA4BAC;AACAC,WADA,qBACA;AAAA;;AAEA;AACA;AACA;AAEA,yDANA,CAMA;;AACA;AACAC,6DADA;AACA;AACAC,iBAFA,CAEA;;AAFA;AAKA;AACA;AACA;AAAAC;AAAA;AAEAd;AACAe;AACAhB;;AAEA;AACA;AACA,SAFA,MAEA;AACA;AACA;AAEA,OAVA;AAWAiB;AAEA,KA9BA;AA8BAC,eA9BA,uBA8BAF,WA9BA,EA8BA;AACA;AACA;AAEAA;AACA;AACAG,0BADA;AAEAC;AAFA;AAIAC;AAEAC;AACA,OARA;AAUA;AACAlB,qBADA;AACA;AACAkB,kBAFA;AAEA;AACAC,uBAHA;AAGA;AACAC,8BAJA;AAIA;AACAC,0BALA;AAKA;AACAC,4BANA;AAMA;AACAC,yBAPA;AAOA;AACAC,wBARA,CAQA;;AARA;AAWA;AAAAC;AAAAR;AAAA;AACA,KAxDA;AAwDAS,oBAxDA,4BAwDAd,WAxDA,EAwDA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACAG,wCADA;AAEAC;AAFA;AAKAC;AACAU;AACA;;AACAT;AACA;;AACA;AACAlB,qBADA;AACA;AACAkB,kBAFA;AAEA;AACAC,uBAHA;AAGA;AACAC,8BAJA;AAIA;AACAC,0BALA;AAKA;AACAC,4BANA;AAMA;AACAC,yBAPA;AAOA;AACAC,wBARA,CAQA;;AARA;AAWA;AAAAC;AAAAR;AAAA;AACA,KAtFA;AAsFAW,eAtFA,uBAsFAhB,WAtFA,EAsFAhB,IAtFA,EAsFAiC,KAtFA,EAsFA;AAAA;;AAEA;AACA;;AAGA;AACAhB;AACA;AAEAY;AACAR;AACA,OANA,MAMA;AACAJ;;AACA;;AAEAY;AACAR;AACA;;AAGA;AACAQ,+BAtBA,CAyBA;AACA;;AACAK;AACAjB;AACAY;AAAAF;AAAA;;AAEA;;AACA;;AACA;AACA,OAPA,EA3BA,CAqCA;;AACAO;AACAjB;;AACA;AACA,OAHA,EAtCA,CA4CA;AACA;;AACAiB;AACAjB;AACAY;AAAAF;AAAA;;AACA;AACA,OAJA,EA9CA,CAoDA;;AACAO;AAEAjB,6BAFA,CAGA;;AAEA;;AACA;AAAAkB;AAAAC;AACAC;AADA;AAAA,WANA,CAUA;;;AAEA;;AACA;;AACA;;AACA;AAKA,OApBA;AAqBA,KAhKA;AAgKAC,YAhKA,oBAgKAjB,MAhKA,EAgKA;AACA;AACAkB;;AAEA;AACAC;AACAC;AAGAC;AACAvB;AACAC;AACAmB;AAEA;;AACAtB;AACAA;AACA;AACA,KAlLA;AAmLA0B,iBAnLA,yBAmLAd,OAnLA,EAmLA;AACA;AACA;AACA;AACA;AACAA;AACA,KAzLA;AAyLAe,WAzLA,qBAyLA,CAEA;AA3LA;AA5BA","names":["name","data","mapContainer","mapOption","map","customOverlay","infowindow","polygons","mounted","script","document","methods","initMap","center","level","removable","coordinates","console","makePolygon","x","y","points","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","fillColor","fillOpacity","polygon","makeMultiPolygon","path2","displayArea","multi","kakao","anchor","animate","duration","centroid","area","p1","p2","f","deletePolygon","zoomMap"],"sourceRoot":"src/components","sources":["TravelMap.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport geojson from '../assets/all.json'\r\n\r\nexport default {\r\n  name: \"HomeMap\",\r\n  data () {\r\n      return {\r\n        mapContainer :  null,\r\n        mapOption : null,\r\n        map :  null,\r\n        customOverlay : null,\r\n        infowindow : null,\r\n        polygons : [],\r\n      }\r\n  },\r\n  mounted() {\r\n      \r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n      \r\n    } else {\r\n      \r\n      const script = document.createElement(\"script\");\r\n      \r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=9361ff07bc1d810e5c855e8be3e33c42\";\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    initMap() {\r\n        \r\n        let data = geojson.features;\r\n        let coordinates = [];\r\n        let name = '';\r\n\r\n        this.mapContainer = document.getElementById('map'); // 지도를 표시할 div\r\n        this.mapOption = {\r\n          center: new kakao.maps.LatLng(35.766826, 127.9786567), // 지도의 중심좌표\r\n          level: 13, // 지도의 확대 레벨\r\n        };\r\n    \r\n        this.map = new kakao.maps.Map(this.mapContainer, this.mapOption);\r\n        this.customOverlay = new kakao.maps.CustomOverlay({});\r\n        this.infowindow = new kakao.maps.InfoWindow({ removable: true });\r\n\r\n        data.forEach((val) => {\r\n            coordinates = val.geometry.coordinates;\r\n            name = val.properties.loc_nm;\r\n           \r\n            if(val.geometry.type == \"MultiPolygon\"){          \r\n                this.displayArea(coordinates , name , true);\r\n            }else{\r\n                this.displayArea(coordinates , name , false);\r\n            }\r\n            \r\n        });\r\n        console.log(\"end-1\")\r\n      \r\n    },makePolygon(coordinates){\r\n        let path = [];\r\n        let points = [];\r\n\r\n        coordinates[0].forEach((coordinate)=>{\r\n            let point = {\r\n                x : coordinate[1],\r\n                y : coordinate[0]\r\n            }\r\n            points.push(point);\r\n            \r\n            path.push(new kakao.maps.LatLng(coordinate[1], coordinate[0]));\r\n        });\r\n\r\n        let polygon = new kakao.maps.Polygon({\r\n            map: this.map, //다각형을 표시할 지도 객체\r\n            path: path, // 그려질 다각형의 좌표 배열입니다\r\n            strokeWeight: 2, // 선의 두께입니다\r\n            strokeColor: '#004c80', // 선의 색깔입니다\r\n            strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n            strokeStyle: 'solid', // 선의 스타일입니다\r\n            fillColor: '#fff', // 채우기 색깔입니다\r\n            fillOpacity: 0.7, // 채우기 불투명도 입니다\r\n        });\r\n\r\n        return {polygon : polygon , points : points}\r\n    },makeMultiPolygon(coordinates){\r\n        let path = [];\r\n        let points = [];\r\n        \r\n        for (var c in coordinates) {\r\n            var multiCoordinates = coordinates[c];\r\n            let path2 = [];\r\n            for (var z in multiCoordinates[0]) {\r\n                let point = {\r\n                    x : multiCoordinates[0][z][1],\r\n                    y : multiCoordinates[0][z][0]\r\n                }\r\n                \r\n                points.push(point);\r\n                path2.push(new kakao.maps.LatLng(multiCoordinates[0][z][1], multiCoordinates[0][z][0]))\r\n            }\r\n            path.push(path2);\r\n        }\r\n        let polygon =new kakao.maps.Polygon({\r\n            map: this.map, //다각형을 표시할 지도 객체\r\n            path: path, // 그려질 다각형의 좌표 배열입니다\r\n            strokeWeight: 2, // 선의 두께입니다\r\n            strokeColor: '#004c80', // 선의 색깔입니다\r\n            strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n            strokeStyle: 'solid', // 선의 스타일입니다\r\n            fillColor: '#fff', // 채우기 색깔입니다\r\n            fillOpacity: 0.7, // 채우기 불투명도 입니다\r\n        })\r\n\r\n        return {polygon : polygon , points : points}\r\n    }, displayArea(coordinates, name , multi){\r\n        \r\n        let points =[];\r\n        let polygon;\r\n        \r\n        \r\n        if(multi){\r\n            console.log(name + 'Multi');\r\n            let returnValue = this.makeMultiPolygon(coordinates);\r\n            \r\n            polygon = returnValue.polygon;\r\n            points.push(returnValue.points)\r\n        }else{\r\n            console.log(name + 'Single');\r\n            let returnValue = this.makePolygon(coordinates);\r\n            \r\n            polygon = returnValue.polygon;\r\n            points.push(returnValue.points)\r\n        }\r\n\r\n    \r\n        this.polygons.push(polygon);\r\n        polygon.setMap(this.map);\r\n        \r\n        \r\n        // 다각형에 mouseover 이벤트를 등록하고 이벤트가 발생하면 폴리곤의 채움색을 변경합니다\r\n        // 지역명을 표시하는 커스텀오버레이를 지도위에 표시합니다\r\n        kakao.maps.event.addListener(polygon, 'mouseover', (mouseEvent) => {\r\n            console.log(\"mouseOver\")\r\n            polygon.setOptions({ fillColor: '#09f' });\r\n\r\n            this.customOverlay.setContent('<div class=\"area\">' + name + '</div>');\r\n            this.customOverlay.setPosition(mouseEvent.latLng);\r\n            this.customOverlay.setMap(this.map);\r\n        });\r\n\r\n        \r\n        // 다각형에 mousemove 이벤트를 등록하고 이벤트가 발생하면 커스텀 오버레이의 위치를 변경합니다\r\n        kakao.maps.event.addListener(polygon, 'mousemove', (mouseEvent)=> {\r\n            console.log(\"mouseMove\")\r\n            this.customOverlay.setPosition(mouseEvent.latLng);\r\n        });\r\n        \r\n\r\n        // 다각형에 mouseout 이벤트를 등록하고 이벤트가 발생하면 폴리곤의 채움색을 원래색으로 변경합니다\r\n        // 커스텀 오버레이를 지도에서 제거합니다\r\n        kakao.maps.event.addListener(polygon, 'mouseout', () => {\r\n            console.log(\"mouseOut\")\r\n            polygon.setOptions({ fillColor: '#fff' });\r\n            this.customOverlay.setMap(null);\r\n        });\r\n\r\n        // 다각형에 click 이벤트를 등록하고 이벤트가 발생하면 다각형의 이름과 면적을 인포윈도우에 표시합니다.\r\n        kakao.maps.event.addListener(polygon, 'click', (mouseEvent) => {\r\n            \r\n            console.log(\"click\")\r\n            //만약 도클릭시 -> 지도확대되면서 시/군으로 폴리곤 구분\r\n            \r\n            let level = this.map.getLevel()-2;\r\n            this.map.setLevel(level,{anchor : this.centroid(points[0]), animate : {\r\n                duration : 350\r\n            }})\r\n            \r\n            //this.deletePolygon(polygon);\r\n            \r\n            let content ='<div style=\"padding:2px;\">' +name + '</div>';\r\n            this.infowindow.setContent(content);\r\n            this.infowindow.setPosition(mouseEvent.latLng);\r\n            this.infowindow.setMap(this.map);\r\n            \r\n            \r\n            \r\n\r\n        });\r\n    },centroid(points){\r\n        let i,j,len,p1,p2,f,area,x,y;\r\n        area = x = y = 0;\r\n        \r\n        for (i = 0 , len = points.length,j= len-1 ; i < len; j=i++) {\r\n            p1 = points[i];\r\n            p2 = points[j];\r\n            \r\n            \r\n            f = p1.y * p2.x - p2.y * p1.x;\r\n            x += (p1.x + p2.x ) * f;\r\n            y += (p1.y + p2.y) * f;\r\n            area += f*3;\r\n            \r\n        }\r\n        console.log(x/area);\r\n        console.log(y/area);\r\n        return new kakao.maps.LatLng(x/area , y/area);\r\n    },\r\n    deletePolygon(polygon){\r\n        /*\r\n        this.polygons.forEach(polygon => { \r\n            polygon.setMap(null);});\r\n            */\r\n        polygon.setMap(null);\r\n    },zoomMap(){\r\n\r\n    }\r\n    \r\n  },\r\n  \r\n\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#map {\r\n  width: 1200px;\r\n  height: 800px;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}